# -*- mode: ruby -*-
# vi: set ft=ruby :

module OS
    def OS.windows?
        (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
    end

    def OS.mac?
        (/darwin/ =~ RUBY_PLATFORM) != nil
    end

    def OS.unix?
        !OS.windows?
    end

    def OS.linux?
        OS.unix? and not OS.mac?
    end
end

Vagrant.configure("2") do |config|
    config.vm.define :dime do |dime|

        dime.vm.box = "centos/7"
        dime.vm.network :private_network, :ip => '192.168.122.10'
        dime.vm.hostname = "dime.test.local"

        if OS.mac?
            # use NFS on Mac because synced folders with VirtualBox are slow and rsync is one direction only
            # bindfs plugin needs to be installed: vagrant plugin install vagrant-bindfs
            dime.vm.synced_folder "../", "/vagrant", type: "nfs"
            #config.bindfs.bind_folder "/vagrant", "/vagrant"

            #dime.vm.synced_folder "../", "/vagrant", type: "rsync",
            #    rsync__exclude: ["env/.pub_cache/*", "app/bootstrap.php.cache", "web/bundles/dimefrontend/packages/*","src/Dime/FrontendBundle/Resources/public/packages/*"],
            #    rsync__args: ["--verbose", "--archive", "--delete", "-z", "-FF"]

        elsif OS.windows?
            # could not use chmod on smb
            # default sync form vagrant also didn't work, because path was too long
            #dime.vm.synced_folder '.', '/vagrant', disabled: true
            dime.vm.synced_folder "../", "/vagrant", type: "rsync",
                            rsync__exclude: ["/bin/", "/.git/", "/web/bundles/", "/app/logs/", "/.idea/", "/src/Dime/FrontendBundle/Resources/public/packages/"],
                            rsync__args: ["--verbose", "--archive", "--delete", "-z", "-FF"]
        else
            # use rsync on other plattforms
            dime.vm.synced_folder "../", "/vagrant", type: 'rsync', rsync__args: ["--verbose", "--archive", "--delete", "-z", "-FF"]
        end

        dime.vm.provider :libvirt do |domain|
            if ENV['REMOTE']
                domain.storage_pool_name = "vagrant"
                domain.host = "vmhost02"
                domain.connect_via_ssh = true
                domain.username = "root"
                domain.id_ssh_key_file = "id_rsa"
            end
            domain.disk_bus = "virtio"
            domain.memory = 4096
            domain.cpus = 2
            domain.volume_cache = 'writeback'
        end

        config.vm.provider "virtualbox" do |domain|
          host = RbConfig::CONFIG['host_os']

          # Give VM 1/4 system memory & access to all cpu cores on the host
          if host =~ /darwin/
            cpus = `sysctl -n hw.ncpu`.to_i
            # sysctl returns Bytes and we need to convert to MB
            mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / 4
          elsif host =~ /linux/
            cpus = `nproc`.to_i
            # meminfo shows KB and we need to convert to MB
            mem = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024 / 4
          else # sorry Windows folks, I can't help you
            cpus = 4
            mem = 4096
          end

          domain.customize ["modifyvm", :id, "--memory", mem]
          domain.customize ["modifyvm", :id, "--cpus", cpus]
        end

        # This shell provisioner installs librarian-puppet and runs it to install
        # puppet modules. After that it just runs puppet
        dime.vm.provision :shell, :path => "shell/bootstrap.sh"
	end
end
